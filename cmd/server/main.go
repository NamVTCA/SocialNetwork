package main

import (
	"log"
	"os"

	"github.com/gin-gonic/gin"
	"github.com/go-redis/redis/v8"
	"github.com/joho/godotenv"

	"socialnetwork/internal/user"
	"socialnetwork/internal/otp"
	"socialnetwork/pkg/config"
	"socialnetwork/pkg/email"
	"socialnetwork/pkg/sms"
	"socialnetwork/routes"
)

func main() {
	// Load bi·∫øn m√¥i tr∆∞·ªùng
	err := godotenv.Load()
	if err != nil {
		log.Println("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file .env ho·∫∑c l·ªói khi load, d√πng bi·∫øn m√¥i tr∆∞·ªùng h·ªá th·ªëng")
	}

	// K·∫øt n·ªëi MongoDB
	db, err := config.ConnectMongoDB()
	if err != nil {
		log.Fatalf("‚ùå MongoDB connection failed: %v", err)
	}

	// K·∫øt n·ªëi Redis
	redisClient := redis.NewClient(&redis.Options{
		Addr: os.Getenv("REDIS_ADDR"), // v√≠ d·ª• "localhost:6379"
	})
	_, err = redisClient.Ping(redisClient.Context()).Result()
	if err != nil {
		log.Fatalf("‚ùå Redis connection failed: %v", err)
	}

	// Email Sender
	emailSender := email.NewMockEmailSender() // ho·∫∑c d√πng SMTP th·∫≠t

	// SMS Sender
	smsSender := sms.NewMockSMSSender() // ho·∫∑c t√≠ch h·ª£p Twilio th·∫≠t

	// Init Service & Handler cho User
	userRepo := user.NewRepository(db)
	userService := user.NewService(userRepo)
	userHandler := user.NewHandler(userService)

	// Init Service & Handler cho OTP
	otpService := otp.NewService(redisClient, emailSender, smsSender)
	otpHandler := otp.NewOTPHandler(otpService)

	// Init router
	gin.SetMode(gin.ReleaseMode)
	r := gin.New()
	r.Use(gin.Logger(), gin.Recovery())

	if err := r.SetTrustedProxies([]string{"127.0.0.1"}); err != nil {
		log.Fatalf("‚ùå Failed to set trusted proxies: %v", err)
	}

	// ƒêƒÉng k√Ω route ng∆∞·ªùi d√πng
	r.POST("/register", userHandler.Register)
	r.POST("/login", userHandler.Login)
	routes.UserRoutes(r, db, userHandler)

	// ƒêƒÉng k√Ω route OTP
	routes.OTProutes(r, otpHandler)

	// C·ªïng server
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}
	log.Println("üöÄ Server is running at port:", port)
	if err := r.Run(":" + port); err != nil {
		log.Fatalf("‚ùå Failed to start server: %v", err)
	}
}
